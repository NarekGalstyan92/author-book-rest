package am.itspace.authorbookrest.mapper;

import am.itspace.authorbookrest.dto.AuthorResponseDto;
import am.itspace.authorbookrest.dto.SaveAuthorDto;
import am.itspace.authorbookrest.entity.Author;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

import java.time.LocalDate;

/**
 * The AuthorMapper interface is responsible for mapping Author objects to AuthorResponseDto objects
 * and SaveAuthorDto objects to Author objects using MapStruct library.
 * It contains two mapping methods: map(Author author) and map(SaveAuthorDto saveAuthorDto).
 * These methods are implemented by the autogenerated class AuthorMapperImpl.
 * The mapping logic is defined using MapStruct annotations like @Mapper and @Mapping.
 * This interface is used by other classes, such as BookMapper, BookMapperImpl, and AuthorServiceImpl,
 * to facilitate the mapping process between different data transfer objects and entity objects.
 *
 * @version 1.6.0.Beta1
 * @since 2024-03-10
 */
@Mapper(componentModel = "spring", imports = LocalDate.class)
public interface AuthorMapper {


    AuthorResponseDto map(Author author);

    @Mapping(target = "createdDate", expression = "java(LocalDate.now())")
    Author map(SaveAuthorDto saveAuthorDto);

}
