package am.itspace.authorbookrest.mapper;

import am.itspace.authorbookrest.dto.BookResponseDto;
import am.itspace.authorbookrest.dto.SaveBookDto;
import am.itspace.authorbookrest.entity.Book;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

/**
 * The BookMapper interface is responsible for mapping Book objects to BookResponseDto objects
 * and SaveBookDto objects to Book objects using the MapStruct library.
 * It contains two mapping methods: map(Book book) and map(SaveBookDto saveBookDto).
 * These methods are implemented by the autogenerated class BookMapperImpl.
 * The mapping logic is defined using MapStruct annotations like @Mapper and @Mapping.
 * This interface is used by other classes, such as BookServiceImpl, to facilitate
 * the mapping process between different data transfer objects and entity objects.
 */
@Mapper(componentModel = "spring", uses = AuthorMapper.class)
public interface BookMapper {

    @Mapping(target = "authorResponseDto", source = "author")
    BookResponseDto map(Book book);

    Book map(SaveBookDto saveBookDto);
}